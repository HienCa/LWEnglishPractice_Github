#pragma checksum "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c87cb02790db4f0cf2875c31e5091055705383bc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Learning), @"mvc.1.0.view", @"/Views/Home/Learning.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\_ViewImports.cshtml"
using LWEnglishPractice;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\_ViewImports.cshtml"
using LWEnglishPractice.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
using LWEnglishPractice.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c87cb02790db4f0cf2875c31e5091055705383bc", @"/Views/Home/Learning.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"98fd7d093ed1d7e82ee64326da0003dab9c85e1c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Learning : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LWEnglishPractice.Entities.Track>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Style/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Style/ListenAndWrite.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("d-none"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("SearchTrackForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Learning", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0.75", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0.25", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0.5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1.25", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1.5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1.75", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CreateOrEdit", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Histories", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
  
    Layout = null;
    //ListenAndWriteContext context = new ListenAndWriteContext();
    //List<Lesson> lesson = context.Lesson.Where(a => a.Active == 1).ToList();

    List<Track> trackList = TempData["track"] as List<Track>;
    Track track = TempData["LevelLesson"] as Track;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc10141", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Listen And Write English</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"">
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "c87cb02790db4f0cf2875c31e5091055705383bc10735", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "c87cb02790db4f0cf2875c31e5091055705383bc11915", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.2.1/chart.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/chart.js""></script>


");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc14073", async() => {
                WriteLiteral("\r\n");
#nullable restore
#line 33 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
     if (track != null)
    {

#line default
#line hidden
#nullable disable
                WriteLiteral("        <input type=\"hidden\"");
                BeginWriteAttribute("value", " value=\"", 1205, "\"", 1263, 1);
#nullable restore
#line 35 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
WriteAttributeValue("", 1213, track.IdlessonNavigation.IdlevelNavigation.Level1, 1213, 50, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" id=\"levelLesson\" />\r\n");
#nullable restore
#line 36 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"

    }

#line default
#line hidden
#nullable disable
                WriteLiteral("    <div class=\"row \" style=\"width: 100vw; height: 100vh;\">\r\n        <div class=\"col-md-2 border border-bottom-0 border-top-0 border-right text-center mt-5\">\r\n            <h3>CVG ENGLISH</h3>\r\n            <div");
                BeginWriteAttribute("class", " class=\"", 1504, "\"", 1512, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                <div id=""homeBtn"" class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                    <a href=""/Home/Index"" style=""text-decoration: none;"" class=""text-dark"">
                        <span style=""font-size:32px; margin-right: 10px;"">
                            <i style=""color: #58CC02;""
                               class=""fa-solid fa-house ""></i>
                        </span> LEARNING
                    </a>
                </div>

                <di id=""rankingBtn"" class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                    <a href=""/Home/Ranking"" style=""text-decoration: none;"" class=""text-dark"">
                        <span style=""font-size:32px; margin-right: 10px;"">
                            <i style=""color: #58CC02;""
                               class=""fa-solid fa-ranking-star ""></i>
                        </span> RANKING

                    </a>
            </div>
            <div id=""profileBtn"" class=""d");
                WriteLiteral(@"-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                <a href=""/Home/Profile"" style=""text-decoration: none;"" class=""text-dark"">
                    <span style=""font-size:32px; margin-right: 20px;"">
                        <i style=""color: #58CC02;""
                           class=""fa-solid fa-user ""></i>
                    </span> PROIFILE
                </a>
            </div>
            <div class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                <a href=""/Login/Logout"" style=""text-decoration: none;"" class=""text-dark"">
                    <span style=""font-size:32px; margin-right: 20px;"">

                        <i style=""color: red;"" class=""fa-solid fa-power-off""></i>
                    </span> LOG OUT
                </a>
            </div>
        </div>
        <div class=""col-md-10 pb-5 border border-bottom-0 border-left-0 border-top-0 border-right""
             style=""max-height: 100vh; overflow-y:scroll"">


            <d");
                WriteLiteral("iv id=\"learning\" class=\"fade\">\r\n");
#nullable restore
#line 86 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                 if (Model != null)
                {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                    <div class=""mt-4 row align-items-center"">
                        <div class=""col-md-4 bg  text-white text-center rounded-circle""
                             style=""width: 80px; height: 80px; position: relative; margin-left: 75px;background-color: #58CC02;"">
                            <span style=""position:absolute; left: 15px;top:25px"">");
#nullable restore
#line 91 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                                                                            Write(Model.IdlessonNavigation.IdlevelNavigation.Levelname);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span>
                        </div>
                        <div class=""col-md-8"">
                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <h2 class="" ml-2 text-center"">
                                        ");
#nullable restore
#line 97 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                                   Write(Model.IdlessonNavigation.Lessonanme);

#line default
#line hidden
#nullable disable
                WriteLiteral(" - Part <span id=\"partOfLesson\"> </span>\r\n                                    </h2>\r\n\r\n                                </div>\r\n");
                WriteLiteral("                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc19500", async() => {
                    WriteLiteral("\r\n                                    <input class=\"d-none\" name=\"Idlesson\"");
                    BeginWriteAttribute("value", " value=\"", 5251, "\"", 5274, 1);
#nullable restore
#line 110 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
WriteAttributeValue("", 5259, Model.Idlesson, 5259, 15, false);

#line default
#line hidden
#nullable disable
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                    <input class=\"d-none\" name=\"Idlevel\"");
                    BeginWriteAttribute("value", " value=\"", 5352, "\"", 5393, 1);
#nullable restore
#line 111 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
WriteAttributeValue("", 5360, Model.IdlessonNavigation.Idlevel, 5360, 33, false);

#line default
#line hidden
#nullable disable
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                    <input class=\"d-none\" id=\"Idtrack\" name=\"Idtrack\" value=\"Idtrack\" />\r\n                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            </div>
                        </div>

                    </div>
                    <div class=""d-flex justify-content-between align-items-center"">
                        <div class=""d-flex align-items-center mt-5"">
                            <div");
                BeginWriteAttribute("class", " class=\"", 5831, "\"", 5839, 0);
                EndWriteAttribute();
                WriteLiteral(">Speed:</div>\r\n");
#nullable restore
#line 121 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                             if (Model.IdlessonNavigation.IdlevelNavigation.Level1 == 1 || Model.IdlessonNavigation.IdlevelNavigation.Level1 == 2)
                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                <div");
                BeginWriteAttribute("class", " class=\"", 6070, "\"", 6078, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                    <select id=\"speedOption\" class=\"w-100 form-select\">\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc23632", async() => {
                    WriteLiteral("Chuẩn");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc24895", async() => {
                    WriteLiteral("0.25");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc26157", async() => {
                    WriteLiteral("0.5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc27418", async() => {
                    WriteLiteral("1");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc28679", async() => {
                    WriteLiteral("1.25");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc29943", async() => {
                    WriteLiteral("1.5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc31206", async() => {
                    WriteLiteral("1.75");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc32470", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    </select>\r\n                                </div>\r\n");
#nullable restore
#line 135 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 136 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                             if (Model.IdlessonNavigation.IdlevelNavigation.Level1 == 3)
                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                <div");
                BeginWriteAttribute("class", " class=\"", 7039, "\"", 7047, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                    <select id=\"speedOption\" class=\"w-100 form-select\">\r\n\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc34599", async() => {
                    WriteLiteral("Chuẩn");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc35864", async() => {
                    WriteLiteral("1.5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc37127", async() => {
                    WriteLiteral("1.75");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc38391", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    </select>\r\n                                </div>\r\n");
#nullable restore
#line 147 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n\r\n                        </div>\r\n");
                WriteLiteral("                        <div class=\"d-flex justify-content-between align-items-center mt-5\">\r\n                            <div");
                BeginWriteAttribute("class", " class=\"", 8322, "\"", 8330, 0);
                EndWriteAttribute();
                WriteLiteral(@">Scores:</div>
                            <div class=""mr-2"">
                                <span id=""scores"" style=""font-size: 24px"">0</span>
                            </div>

                        </div>
                        <div class=""d-flex justify-content-between align-items-center mt-5"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc40627", async() => {
                    WriteLiteral("\r\n                                <input type=\"hidden\" name=\"Idlesson\"");
                    BeginWriteAttribute("value", " value=\"", 8800, "\"", 8823, 1);
#nullable restore
#line 169 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
WriteAttributeValue("", 8808, Model.Idlesson, 8808, 15, false);

#line default
#line hidden
#nullable disable
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                <input type=\"hidden\" name=\"Score\"");
                    BeginWriteAttribute("value", " value=\"", 8894, "\"", 8902, 0);
                    EndWriteAttribute();
                    WriteLiteral(" id=\"Score\" />\r\n                                <input type=\"hidden\" name=\"Finishtime\"");
                    BeginWriteAttribute("value", " value=\"", 8989, "\"", 8997, 0);
                    EndWriteAttribute();
                    WriteLiteral(" id=\"Finishtime\" />\r\n                                <button type=\"submit\" class=\"border-0 btn\" disabled id=\"saveHistoryBtn\"><i class=\"fas fa-save\" style=\"font-size: 36px;\"></i></button>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_15.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_16.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between align-items-center mt-5\">\r\n                            <div");
                BeginWriteAttribute("class", " class=\"", 9383, "\"", 9391, 0);
                EndWriteAttribute();
                WriteLiteral(">Times:</div>\r\n                            <div class=\"mr-2\">\r\n                                <span id=\"timer\" style=\"font-size: 24px\">00:00:00</span>\r\n                            </div>\r\n\r\n                        </div>\r\n");
                WriteLiteral("                    </div>\r\n                    <div class=\"mt-2\">\r\n");
                WriteLiteral("                        <canvas id=\"linechart\" class=\"w-100\" style=\"max-height: 50vh;\"></canvas>\r\n                    </div>\r\n                    <div class=\"mt-2\">\r\n");
                WriteLiteral(@"                        <div class=""row"">
                            <div class=""col-md-3"">
                                <div class=""row justify-content-center align-items-center"" >
                                    <div class=""col-md-2"">
                                        Wrong:
                                    </div>
                                    <div class=""col-md-10"">
                                        <textarea type=""text"" disabled id=""wrongWord"" class=""form-control text-danger""></textarea>

                                    </div>
                                </div>

                            </div>
                            <div class=""col-md-9"">
                                <div class=""row justify-content-center align-items-center"">
                                    <div class=""col-md-1"">
                                        Right:
                                    </div>
                                    <div class=""col-md-11"">
        ");
                WriteLiteral(@"                                <textarea type=""text"" disabled id=""correctWord"" class=""form-control text-success""></textarea>
                                    </div>
                                </div>

                            </div>
                        </div>
");
#nullable restore
#line 220 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                         if (track.IdlessonNavigation.IdlevelNavigation.Level1 == 1)
                        {

#line default
#line hidden
#nullable disable
                WriteLiteral("                            <p id=\"hint\"></p>\r\n");
#nullable restore
#line 223 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                        <p id=\"audioText\" class=\"bg bg-light boder rounded p-2 \"></p>\r\n                        <audio controls loop id=\"myAudio\" class=\"custom-controls w-100\">\r\n");
                WriteLiteral("                            <source id=\"mySource\"");
                BeginWriteAttribute("src", " src=\"", 12069, "\"", 12075, 0);
                EndWriteAttribute();
                WriteLiteral(@" type=""audio/mpeg"">
                        </audio>
                        <div class=""d-flex justify-content-around mt-2"">
                            <button id=""listenBtn"" class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fa-solid fa-circle-play""></i></span>
                                Listen
                            </button>
                            <button id=""pauseBtn"" class=""btn text-white"" style=""background-color: #58CC02; display:none"">
                                <span class=""mr-2""><i class=""fa-solid fa-pause""></i></span>
                                Pause
                            </button>
                            <button id=""hintVisibleBtn"" class=""btn text-white""
                                    style=""background-color: #58CC02;display: none"">
                                <span class=""mr-2"">
                                    <i class=""fa-solid fa-eye""></i>
                        ");
                WriteLiteral(@"        </span>Hint
                            </button>
                            <button id=""hintHideBtn"" class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fas fa-eye-slash""></i></span>Hint
                            </button>

                            <button id=""retryBtn"" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fa-solid fa-rotate-right""></i></span>
                                Retry
                            </button>
                            <button id=""backBtn"" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fas fa-fast-backward""></i></span>
                                Back
                            </button>
                            <button id=""nextBtn"" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
        ");
                WriteLiteral(@"                        <span class=""mr-2""><i class=""fa-solid fa-forward-fast""></i></span>
                                Next
                            </button>
                            <button id=""restartBtn"" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fa-solid fa-eraser""></i></span>
                                Restart
                            </button>

                        </div>
                    </div>
                    <p class=""mt-2"">Listen and write the words you hear below</p>
");
                WriteLiteral("                    <textarea disabled class=\"w-100 form-control\"");
                BeginWriteAttribute("name", " name=\"", 14885, "\"", 14892, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"inputText\" cols=\"30\" rows=\"2\" style=\"min-height: 20px;\"\r\n                              placeholder=\"Write it down here\"></textarea>\r\n");
#nullable restore
#line 271 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                }
                else
                {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                    <div class=""mt-4 row align-items-center"">
                        <div class=""col-md-4 bg  text-white text-center rounded-circle""
                             style=""width: 80px; height: 80px; position: relative; margin-left: 75px;background-color: #58CC02;"">
                            <span style=""position:absolute; left: 15px;top:25px""></span>
                        </div>
                        <div class=""col-md-8"">
                            <div class=""row"">
                                <div class=""col-md-12"">
                                    <h2 class="" ml-2 text-center"">
                                        There are currently no tracks <span");
                BeginWriteAttribute("id", " id=\"", 15791, "\"", 15796, 0);
                EndWriteAttribute();
                WriteLiteral("> </span>\r\n                                    </h2>\r\n\r\n                                </div>\r\n");
                WriteLiteral("                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc51315", async() => {
                    WriteLiteral("\r\n                                    <input class=\"d-none\"");
                    BeginWriteAttribute("name", " name=\"", 16583, "\"", 16590, 0);
                    EndWriteAttribute();
                    BeginWriteAttribute("value", " value=\"", 16591, "\"", 16599, 0);
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                    <input class=\"d-none\"");
                    BeginWriteAttribute("name", " name=\"", 16662, "\"", 16669, 0);
                    EndWriteAttribute();
                    BeginWriteAttribute("value", " value=\"", 16670, "\"", 16678, 0);
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                    <input class=\"d-none\"");
                    BeginWriteAttribute("id", " id=\"", 16741, "\"", 16746, 0);
                    EndWriteAttribute();
                    WriteLiteral(" name=\"Idtrack\"");
                    BeginWriteAttribute("value", " value=\"", 16762, "\"", 16770, 0);
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            </div>
                        </div>

                    </div>
                    <div class=""d-flex justify-content-between align-items-center"">
                        <div class=""d-flex align-items-center mt-2"">
                            <div");
                BeginWriteAttribute("class", " class=\"", 17102, "\"", 17110, 0);
                EndWriteAttribute();
                WriteLiteral(">Speed:</div>\r\n                            <div");
                BeginWriteAttribute("class", " class=\"", 17158, "\"", 17166, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                <select");
                BeginWriteAttribute("id", " id=\"", 17209, "\"", 17214, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"w-100 form-select\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc55285", async() => {
                    WriteLiteral("Chuẩn");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_10.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc56546", async() => {
                    WriteLiteral("0.25");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc57804", async() => {
                    WriteLiteral("0.5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc59061", async() => {
                    WriteLiteral("0.75");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc60319", async() => {
                    WriteLiteral("1.25");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc61579", async() => {
                    WriteLiteral("1.5");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_12.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc62838", async() => {
                    WriteLiteral("1.75");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc64098", async() => {
                    WriteLiteral("2");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                </select>\r\n                            </div>\r\n\r\n                        </div>\r\n");
                WriteLiteral("                        <div class=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <div");
                BeginWriteAttribute("class", " class=\"", 18630, "\"", 18638, 0);
                EndWriteAttribute();
                WriteLiteral(">Scores:</div>\r\n                            <div class=\"mr-2\">\r\n                                <span");
                BeginWriteAttribute("id", " id=\"", 18740, "\"", 18745, 0);
                EndWriteAttribute();
                WriteLiteral(" style=\"font-size: 24px\">0</span>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c87cb02790db4f0cf2875c31e5091055705383bc66259", async() => {
                    WriteLiteral("\r\n                                <input type=\"hidden\" name=\"Idlesson\"");
                    BeginWriteAttribute("value", " value=\"", 19102, "\"", 19110, 0);
                    EndWriteAttribute();
                    WriteLiteral(" /> ");
                    WriteLiteral("\r\n                                <input type=\"hidden\" name=\"Score\"");
                    BeginWriteAttribute("value", " value=\"", 19203, "\"", 19211, 0);
                    EndWriteAttribute();
                    BeginWriteAttribute("id", " id=\"", 19212, "\"", 19217, 0);
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                <input type=\"hidden\" name=\"Finishtime\"");
                    BeginWriteAttribute("value", " value=\"", 19293, "\"", 19301, 0);
                    EndWriteAttribute();
                    BeginWriteAttribute("id", " id=\"", 19302, "\"", 19307, 0);
                    EndWriteAttribute();
                    WriteLiteral(" />\r\n                                <button type=\"submit\" class=\"border-0 btn\" disabled");
                    BeginWriteAttribute("id", " id=\"", 19396, "\"", 19401, 0);
                    EndWriteAttribute();
                    WriteLiteral("><i class=\"fas fa-save\" style=\"font-size: 36px;\"></i></button>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_15.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_15);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_16.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between align-items-center mt-2\">\r\n                            <div");
                BeginWriteAttribute("class", " class=\"", 19663, "\"", 19671, 0);
                EndWriteAttribute();
                WriteLiteral(">Times:</div>\r\n                            <div class=\"mr-2\">\r\n                                <span");
                BeginWriteAttribute("id", " id=\"", 19772, "\"", 19777, 0);
                EndWriteAttribute();
                WriteLiteral(" style=\"font-size: 24px\">00:00:00</span>\r\n                            </div>\r\n\r\n                        </div>\r\n");
                WriteLiteral("                    </div>\r\n                    <div class=\"mt-2\">\r\n                        <p");
                BeginWriteAttribute("id", " id=\"", 20144, "\"", 20149, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"bg bg-light boder rounded p-2\"></p>\r\n                        <audio controls loop");
                BeginWriteAttribute("id", " id=\"", 20239, "\"", 20244, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"custom-controls w-100\">\r\n                            <source id=\"mySource\"");
                BeginWriteAttribute("src", " src=\"", 20327, "\"", 20333, 0);
                EndWriteAttribute();
                WriteLiteral(" type=\"audio/mpeg\">\r\n                        </audio>\r\n                        <div class=\"d-flex  justify-content-around mt-2\">\r\n                            <button disabled");
                BeginWriteAttribute("id", " id=\"", 20508, "\"", 20513, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fa-solid fa-circle-play""></i></span>
                                Listen
                            </button>
                            <button");
                BeginWriteAttribute("id", " id=\"", 20788, "\"", 20793, 0);
                EndWriteAttribute();
                WriteLiteral(@" disabled class=""btn text-white"" style=""background-color: #58CC02; display:none"">
                                <span class=""mr-2""><i class=""fa-solid fa-pause""></i></span>
                                Pause
                            </button>
                            <button disabled");
                BeginWriteAttribute("id", " id=\"", 21092, "\"", 21097, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""btn text-white""
                                    style=""background-color: #58CC02;display: none"">
                                <span class=""mr-2"">
                                    <i class=""fa-solid fa-eye""></i>
                                </span>Hint
                            </button>
                            <button");
                BeginWriteAttribute("id", " id=\"", 21450, "\"", 21455, 0);
                EndWriteAttribute();
                WriteLiteral(" disabled class=\"btn text-white\" style=\"background-color: #58CC02;\">\r\n                                <span class=\"mr-2\"><i class=\"fas fa-eye-slash\"></i></span>Hint\r\n                            </button>\r\n\r\n                            <button");
                BeginWriteAttribute("id", " id=\"", 21698, "\"", 21703, 0);
                EndWriteAttribute();
                WriteLiteral(@" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fa-solid fa-rotate-right""></i></span>
                                Retry
                            </button>
                            <button");
                BeginWriteAttribute("id", " id=\"", 21987, "\"", 21992, 0);
                EndWriteAttribute();
                WriteLiteral(@" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fas fa-fast-backward""></i></span>
                                Back
                            </button>
                            <button");
                BeginWriteAttribute("id", " id=\"", 22271, "\"", 22276, 0);
                EndWriteAttribute();
                WriteLiteral(@" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fa-solid fa-forward-fast""></i></span>
                                Next
                            </button>
                            <button");
                BeginWriteAttribute("id", " id=\"", 22559, "\"", 22564, 0);
                EndWriteAttribute();
                WriteLiteral(@" disabled class=""btn text-white"" style=""background-color: #58CC02;"">
                                <span class=""mr-2""><i class=""fa-solid fa-eraser""></i></span>
                                Restart
                            </button>

                        </div>
                    </div>
                    <p class=""mt-2"">Listen and write the words you hear below</p>
");
                WriteLiteral("                    <textarea disabled class=\"w-100 form-control\"");
                BeginWriteAttribute("name", " name=\"", 23106, "\"", 23113, 0);
                EndWriteAttribute();
                BeginWriteAttribute("id", " id=\"", 23114, "\"", 23119, 0);
                EndWriteAttribute();
                WriteLiteral(" cols=\"30\" rows=\"2\" style=\"min-height: 20px;\"\r\n                              placeholder=\"Write it down here\"></textarea>\r\n");
#nullable restore
#line 404 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n");
                WriteLiteral("    </div>\r\n\r\n");
                WriteLiteral(@"    <script>




    </script>
    <script>



        //display timer
        let seconds = 0;
        let minutes = 0;
        let hours = 0;
        let count = 0;
        let timerId;
        let stopped = false;

        let timerDisplay = ""00:00:00"";
        //function startTimer() {
        //    timerId = setInterval(function () {
        //        count++;

        //            seconds++;
        //            if (seconds >= 60) {
        //                seconds = 0;
        //                minutes++;
        //                if (minutes >= 60) {
        //                    minutes = 0;
        //                    hours++;
        //                }
        //            }
        //             timerDisplay = (hours < 10 ? ""0"" + hours : hours) + "":"" +
        //                (minutes < 10 ? ""0"" + minutes : minutes) + "":"" +
        //                (seconds < 10 ? ""0"" + seconds : seconds);
        //            document.getElementById(""timer"").innerTex");
                WriteLiteral(@"t = timerDisplay;

        //        //if (stopped) {
        //        //    clearInterval(timerId);
        //        //}

        //    }, 1000);
        //}
        let counter = 0;
        let intervalId = null;
        function startStopTimer() {
            if (intervalId) {
                clearInterval(intervalId);
                intervalId = null;
                //document.getElementById('start-stop-button').textContent = 'Start';
            } else {
                intervalId = setInterval(function () {
                    counter++;
                    seconds++;
                    if (seconds >= 60) {
                        seconds = 0;
                        minutes++;
                        if (minutes >= 60) {
                            minutes = 0;
                            hours++;
                        }
                    }
                    timerDisplay = (hours < 10 ? ""0"" + hours : hours) + "":"" +
                        (minutes < 10 ? ""0"" + min");
                WriteLiteral(@"utes : minutes) + "":"" +
                        (seconds < 10 ? ""0"" + seconds : seconds);
                    document.getElementById('timer').innerText = timerDisplay;
                }, 1000);
                //document.getElementById('start-stop-button').textContent = 'Stop';
            }
        }
        //button and input
        const listenBtn = document.getElementById(""listenBtn"");
        const pauseBtn = document.getElementById(""pauseBtn"");
        const audioSource = document.getElementById(""myAudio"");
        const retryBtn = document.getElementById(""retryBtn"");
        const nextBtn = document.getElementById(""nextBtn"");
        const restartBtn = document.getElementById(""restartBtn"");
        const speedOption = document.getElementById(""speedOption"");
        const inputFocus = document.getElementById(""inputText"");
        let audioText = document.getElementById(""audioText"");

        //load sourceList
        let myArr =");
#nullable restore
#line 523 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Learning.cshtml"
              Write(Html.Raw(ViewBag.CookieValue));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
        const trackList = myArr.map(obj => obj[Object.keys(obj)[2]]);
        const IdtrackList = myArr.map(obj => obj[Object.keys(obj)[0]]);
        const TracknameList = myArr.map(obj => obj[Object.keys(obj)[1]]);
        const DatecreateList = myArr.map(obj => obj[Object.keys(obj)[3]]);
        const DurationList = myArr.map(obj => obj[Object.keys(obj)[4]]);
        const DescribeList = myArr.map(obj => obj[Object.keys(obj)[5]]);

        let audio = document.getElementById(""myAudio"");

        let source = document.getElementById(""mySource"");
        let partOfLesson = document.getElementById(""partOfLesson"");

        let currenSourceIndex = 0;
        let chartLessonScore = [];

        //result
        let x;//tổng thời gian nghe;
        let y;// thời gian của audio;
        let scores = 0;
        let scoreCurrent = document.getElementById(""scores"");
        function playNextMusic() {

            currenSourceIndex++;

            if (currenSourceIndex >= trackList.length) {");
                WriteLiteral(@"


                /*clearInterval(timerId);*/
                startStopTimer();
                x = count;
                y = DurationList.reduce((total, currentValue) => total + currentValue);
                console.log(""x""+x);
                console.log(""y""+y);
                scores = 10 * (11 - x / y);

                // draw score chart

                chartLessonScore.push(Math.round(scores));
                line_chart.destroy();
                createChart();
                //console.log(""scores :"" + scores)
                //end draw
                document.getElementById('inputText').disabled = true;
                //save history into database
                document.getElementById(""Score"").value = Math.round(scores);
                document.getElementById(""Finishtime"").value = x;
                document.getElementById(""saveHistoryBtn"").disabled = false;
                document.getElementById(""saveHistoryBtn"").style.color = ""#58CC02"";
                //show clien");
                WriteLiteral(@"t browser
                scoreCurrent.innerText = Math.round(scores);


                audioText.innerText = ""Finish!"";
                document.getElementById(""partOfLesson"").innerText = TracknameList[trackList.length - 1];
                listenBtn.disabled = true;
                pauseBtn.disabled = true;
                retryBtn.disabled = true;
                backBtn.disabled = true;
                restartBtn.disabled = false;
                inputFocus.disabled = true;

                source.src = ""/Images/"" + trackList[0];

            }

            if(currenSourceIndex == trackList.length - 1) {
                nextBtn.disabled = true;
                listenBtn.disabled = true;

                console.log(""currenSourceIndex"" + currenSourceIndex);
                console.log(""trackList"" + (trackList.length - 1));
            }
            if (currenSourceIndex > 0 && !(currenSourceIndex >= trackList.length)) {
                backBtn.disabled = false;

            }
 ");
                WriteLiteral(@"           if (currenSourceIndex == 0 && count > 0) {
                nextBtn.disabled = false;

            }/* else {*/
            //    nextBtn.disabled = true;
            //}

                 //ChangeTrackName();
            //reset input
            inputFocus.value="""";
            inputFocus.disabled = false;
            inputFocus.focus();
            //reset audio text
            audioText = document.getElementById(""audioText"").innerText.trim();

            partOfLesson.innerText = TracknameList[currenSourceIndex];
            source.src = ""/Images/"" + trackList[currenSourceIndex];
            document.getElementById(""audioText"").innerText = DescribeList[currenSourceIndex];
            audio.load();
            audio.play();

        }

        //ChangeTrackName();
        //Next audio
  /*      audio.addEventListener('ended', playNextMusic);*/

        partOfLesson.innerText = TracknameList[currenSourceIndex];
        source.src = ""/Images/"" + trackList[currenSourceIn");
                WriteLiteral(@"dex];
        audioText.innerText = DescribeList[currenSourceIndex];

        audio.load();
        /*  audio.play();*/


        const backBtn = document.getElementById(""backBtn"");

        backBtn.addEventListener('click', playBackMusic);
        function playBackMusic() {

            currenSourceIndex--;

            if (currenSourceIndex >= trackList.length) {

                x = count;
                y = DurationList.reduce((total, currentValue) => total + currentValue);
                scores = 10 * (11 - x / y);
                scoreCurrent.innerText = scores;

                audioText.innerText = ""Finish!"";
                listenBtn.disabled = true;
                pauseBtn.disabled = true;
                retryBtn.disabled = true;
                backBtn.disabled = true;
                source.src = ""/Images/"" + trackList[0];


            }
            if (currenSourceIndex == 0) {
                backBtn.disabled = true;
            }

            //ChangeTrack");
                WriteLiteral(@"Name();
            //reset input
            inputFocus.value = """";
            inputFocus.disabled = false;
            inputFocus.focus();
            //reset audio text
            audioText = document.getElementById(""audioText"").innerText.trim();

            partOfLesson.innerText = TracknameList[currenSourceIndex];
            source.src = ""/Images/"" + trackList[currenSourceIndex];
            document.getElementById(""audioText"").innerText = DescribeList[currenSourceIndex];
            audio.load();
            audio.play();

        }



        let flag = true;
        //Run audio
        listenBtn.addEventListener(""click"", function () {
            inputFocus.disabled = false;
            inputFocus.focus();

            audioSource.play();
            listenBtn.style.display = ""none"";
            pauseBtn.style.display = ""block"";
            retryBtn.disabled = false;
            //if (flag) {
            //    startTimer();
            //    flag = false;
           ");
                WriteLiteral(@" //}
            startStopTimer();
        })
        //Pause audio
        pauseBtn.addEventListener(""click"", function () {
            audioSource.pause();
            listenBtn.style.display = ""block"";
            pauseBtn.style.display = ""none"";
            listenBtn.disabled = false;

        })

        //Choose speed
        window.addEventListener(""load"", function () {
            audioSource.playbackRate = 0.75;
            const levelLesson = document.getElementById(""levelLesson"").value;

            if (levelLesson == 3) {
                audioSource.playbackRate = 1.25;
            }

        })
        speedOption.addEventListener(""change"", function () {
            audioSource.playbackRate = speedOption.value;

        })

        //Retry audio

        retryBtn.addEventListener(""click"", function () {
            audioSource.currentTime = 0;
            audioSource.play();
        })
        //Next audio
        //const backBtn = document.getElementById(""backBtn");
                WriteLiteral(@""");
        nextBtn.addEventListener(""click"", function () {
            inputFocus.disabled = false;
            playNextMusic();
            inputFocus.focus();

        })
        //Back audio
        backBtn.addEventListener(""click"", function () {
            const levelLesson = document.getElementById(""levelLesson"").value;
            if (levelLesson == 1) {
                document.getElementById(""correctWord"").value = """";
            }
            inputText.disabled = false;
            inputText.value = """";
            listenBtn.style.display = ""none"";
            pauseBtn.style.display = ""block"";
            pauseBtn.disabled = false;
            retryBtn.disabled = false;
            if (currenSourceIndex == 0 || (currenSourceIndex < trackList.length -1)) {
                nextBtn.disabled = false;
            }
        })
        //Restart test
        restartBtn.addEventListener(""click"", function () {
            const levelLesson = document.getElementById(""levelLesson"").va");
                WriteLiteral(@"lue;
            //if (levelLesson == 1) {
            //    document.getElementById(""correctWord"").value = """";
            //}
            if (levelLesson == 2 || levelLesson == 3) {
                document.getElementById(""correctWord"").value = """";
            }
            //reset scores
            scoreCurrent.innerText = 0;
            scores = 0;
            count = 0;
            seconds = 0;
            console.log(""scores"" + scores);
            console.log(""count"" + count);
            console.log(""timer"" + timer);
            timerDisplay = ""00:00:00"";
            clearInterval(timerId);
            //startTimer();
            startStopTimer();
            inputText.disabled = false;
            inputText.value = """";
            inputText.focus();

            listenBtn.style.display = ""none"";
            pauseBtn.style.display = ""block"";

            backBtn.disabled = true;
            retryBtn.disabled = false;
            pauseBtn.disabled = false;
            //re");
                WriteLiteral(@"set audio
            currenSourceIndex = 0;;
            partOfLesson.innerText = TracknameList[currenSourceIndex];
            source.src = ""/Images/"" + trackList[currenSourceIndex];
            document.getElementById(""audioText"").innerText = DescribeList[currenSourceIndex];
            audio.load();
            audio.play();
        })
        //Hint audio
        function toggleDiv(div) {

            if (div.style.display == ""none"") {
                div.style.display = ""block"";
            } else {
                div.style.display = ""none"";
            }
        }


        const hintVisibleBtn = document.getElementById(""hintVisibleBtn"");
        hintVisibleBtn.addEventListener(""click"", function () {
            const audioText = document.getElementById(""audioText"");
            toggleDiv(audioText)
            hintHideBtn.style.display = ""block"";
            hintVisibleBtn.style.display = ""none"";


        })
        const hintHideBtn = document.getElementById(""hintHideBtn");
                WriteLiteral(@""");
        hintHideBtn.addEventListener(""click"", function () {
            const audioText = document.getElementById(""audioText"");
            toggleDiv(audioText)
            hintVisibleBtn.style.display = ""block"";
            hintHideBtn.style.display = ""none"";

        })
        //focus input



        //Check typed
        const inputText = document.getElementById(""inputText"");
        //LEVEL OF THE LESSON
        const levelLesson = document.getElementById(""levelLesson"").value;

        //if (levelLesson == 1) {
        //    // người dùng chỉ cần nhập 3 ký tự đầu tiên thì hệ thống sẽ hoàn thành nguyên từ, người dùng sẽ nhập tiếp 3 từ tiếp theo, cứ tiếp tục cho đến hết.
        //    function checkInput() {
        //        audioText = document.getElementById(""audioText"").innerText.trim().toLowerCase();
        //        let success = [];
        //        let lyrics = audioText; // lyrics need compare
        //        let arrLength = lyrics.trim().split("" "").length;

     ");
                WriteLiteral(@"   //        let word = lyrics; // lyrics need compare
        //        let count = 0; // Khởi tạo biến đếm

        //        var input = document.getElementById(""inputText"").value.toLowerCase().trim(); // Get input value and convert to lower case

        //        let splitWord = word.split("" "");
        //        let arr = Array.from(splitWord);
        //        arr.forEach(element => {
        //            console.log(""count: "" + count);
        //            console.log(""arr.length: "" + arrLength);

        //            // Compare the first 3 letters of the word with the first 3 letters in the input
        //            if (element.substring(0, 3) === input.substring(0, 3)) {
        //                // Nếu khớp, xóa giá trị input
        //                let wordList = document.getElementById(""correctWord"").value;
        //                wordList = wordList + element;
        //                document.getElementById(""correctWord"").value = wordList + "" "";
        //           ");
                WriteLiteral(@"     // Nếu tất cả các chữ cái đều khớp, in ra thông báo
        //                success.push(element + """");

        //                document.getElementById(""inputText"").value = """";
        //                word = word.substring(word.indexOf("" "") + 1);
        //                count++; // Tăng biến đếm lên 1

        //            }
        //            if (count === arrLength) { // Nếu biến đếm bằng độ dài của mảng arr
        //                /*document.getElementById(""inputText"").disabled = true;*/ // Dừng lại bằng cách disable input
        //                inputText.disabled = true;
        //                playNextMusic();
        //                backBtn.disabled = false;

        //            }
        //        })
        //    }
        //    inputText.addEventListener(""input"", checkInput);
        //}
        //else
        if (levelLesson == 1) {
// lyrics need compare


            let currentIndex = 0;
            const input = document.getElementById('input");
                WriteLiteral(@"Text');
            let countList = 0;
            input.addEventListener('input', function () {
                audioText = document.getElementById(""audioText"").innerText.trim();
                let words = audioText.trim().split("" "");
                for (let i = 0; i < words.length; i++) {
                    words[i] = words[i].replace(/[.,?]/g, '');
                }
                const inputValue = input.value.trim();
                const currentWord = words[currentIndex];
                console.log(""currentIndex "" + currentIndex);
                console.log(""inputValue "" + inputValue);
                console.log(""currentWord "" + currentWord);
                if (inputValue.toLowerCase() === currentWord.toLowerCase()) {
                    input.value = '';
                    document.getElementById('correctWord').value = document.getElementById('correctWord').value + words[currentIndex] + "" "";
                    document.getElementById('wrongWord').value = """";
                 ");
                WriteLiteral(@"   currentIndex++;

                    if (currentIndex < words.length) {
                        //const nextWord = words[currentIndex];
                        if (/^[A-Z]/.test(words[currentIndex])) {
                            document.getElementById('hint').textContent = words[currentIndex];
                        } else {
                            document.getElementById('hint').textContent = '';
                        }
                    }
                    else {
                        countList++;
                        document.getElementById('hint').textContent = '';
                        currentIndex = 0;
                        document.getElementById('correctWord').value = """";
                        playNextMusic();
                        backBtn.disabled = false;

                    }
                } else {
                    document.getElementById('wrongWord').value = inputValue;

                }
            });

        }
        else if (level");
                WriteLiteral(@"Lesson == 2 || levelLesson == 3) {



            let currentIndex = 0;
            const input = document.getElementById('inputText');
            let countList = 0;
            input.addEventListener('input', function () {
                audioText = document.getElementById(""audioText"").innerText.trim();
                let words = audioText.trim().split("" "");
                for (let i = 0; i < words.length; i++) {
                    words[i] = words[i].replace(/[.,?]/g, '');
                }
                const inputValue = input.value.trim();
                const currentWord = words[currentIndex];
                console.log(""currentIndex "" + currentIndex);
                console.log(""inputValue "" + inputValue);
                console.log(""currentWord "" + currentWord);
                if (inputValue.toLowerCase() === currentWord.toLowerCase()) {
                    input.value = '';
                    document.getElementById('correctWord').value = document.getElementById('corr");
                WriteLiteral(@"ectWord').value + words[currentIndex] + "" "";

                    currentIndex++;


                    if (currentIndex < words.length) {
                        document.getElementById('wrongWord').value = """";


                    }
                    else {
                        countList++;

                        currentIndex = 0;

                        playNextMusic();
                        backBtn.disabled = false;
                        document.getElementById('correctWord').value = """";

                    }

                } else {
                    document.getElementById('wrongWord').value = inputValue;

                }
            });

        }
        //sai là xóa lập tức chỉ cho nhập đúng không cho nhập sai
        //else if (levelLesson == 2 || levelLesson == 3) {


        //    //ban đầu
        //    //LEVEL 3 - VERY HARD - Learners must enter each word correctly.
        //    // người học phải nhập đúng từng ký tự trong bài nghe.

      ");
                WriteLiteral(@"  //    //audio speed = >= 1.25


        //    //theo mô tả pdf
        //    // level 2 <15s, level 3 > 20s
        //    const checkType = function () {
        //        audioText = document.getElementById(""audioText"").innerText.trim().toLowerCase();

        //        let textTyped = document.getElementById(""inputText"").value.toLowerCase();
        //        for (let i = 0; i < textTyped.length; i++) {
        //            console.log(""audioText:"" + audioText[i]);
        //            console.log(""textTyped:"" + textTyped[i]);
        //            console.log(""audioText:"" + audioText);
        //            if (audioText[i] === textTyped[i]) {
        //                if (audioText === textTyped) {

        //                    inputText.disabled = true;
        //                    playNextMusic();
        //                    backBtn.disabled = false;


        //                    break;
        //                }
        //                console.log(""T"");
        //  ");
                WriteLiteral(@"          }

        //            else {
        //                inputText.value = inputText + textTyped.charAt(inputText.value.length - 1)
        //                inputText.value = textTyped.substring(0, textTyped.length - 1);
        //                console.log(""F"");

        //            }
        //        }
        //    }
        //    //need to re-edit. This is level 3 -very hard
        //    inputText.addEventListener(""keyup"", checkType);
        //}





    </script>
    <script>
        // except chartX, the rest is chartY (chartHint, chartAudioEnd, chartLessonScore, chartAudioPause ,...)
        let Count_Audio_End = 0;
        let chartAudioEnd = [];
        let Count_Audio_Pause = 0;
        let chartAudioPause = [];
        let Count_Audio_Retry = 0;
        let chartAudioRetry = [];
        let chartHint = [];
        let Count_Audio_Hint = 0;

        //line chart
        let chartX = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13',");
                WriteLiteral(@" '14', '15', '16', '17', '18', '19', '20'];
        let line_chart = new Chart();
        const createChart = function () {
            let chart = document.getElementById(""linechart"").getContext(""2d"");

            line_chart = new Chart(chart, {
                type: 'line',
                data: {
                    labels: chartX,
                    datasets: [

                        {
                            // number of times click pause button
                            //finish
                            label: 'Click Pause',
                            borderColor: 'black',
                            backgroundColor: 'black',
                            data: chartAudioPause,
                            tension: 0.4,
                        },

                        {
                            //finish
                            //scores of the lesson
                            label: 'Scores',
                            borderColor: 'red',
                ");
                WriteLiteral(@"            backgroundColor: 'red',
                            data: chartLessonScore,
                            tension: 0.4,
                        },
                        {
                            //number of times audio play
                            label: 'Misheard',
                            borderColor: 'gray',
                            backgroundColor: 'gray',
                            data: chartAudioEnd,
                            tension: 0.4,
                        },
                        {
                            label: 'Retry',
                            borderColor: 'yellow',
                            backgroundColor: 'yellow',
                            data: chartAudioRetry,
                            tension: 0.4,
                        }
                        ,
                        {
                            label: 'Retry',
                            borderColor: 'green',
                            backgroundColor: 'green',");
                WriteLiteral(@"
                            data: chartHint,
                            tension: 0.4,
                        }
                    ]
                }
            });
        }
        //line_chart.destroy();

        createChart();


        audio.addEventListener(""timeupdate"", function () {
            //Count_Audio_End++;
            //if (Count_Audio_End <= 20) {
            //    chartAudioEnd.push(Count_Audio_End);
            //    line_chart.destroy();
            //    createChart();
            //    console.log(""endaudio :"" + Count_Audio_End)

            //}
            if (audio.currentTime === 0 && !audio.paused && audio.loop) {
                Count_Audio_End++;
                chartAudioEnd.push(Count_Audio_End);
                line_chart.destroy();
                createChart();
                console.log(""Looped "" + Count_Audio_End + "" times."");
            }

        });

        pauseBtn.addEventListener(""click"", function () {
            Count_Audio_P");
                WriteLiteral(@"ause++;
            if (Count_Audio_Pause <= 20) {
                chartAudioPause.push(Count_Audio_Pause);
                line_chart.destroy();
                createChart();
                console.log(""pauseaudio :"" + Count_Audio_Pause)
            }


        });
        retryBtn.addEventListener(""click"", function () {
            Count_Audio_Retry++;
            if (Count_Audio_Pause <= 20) {
                chartAudioRetry.push(Count_Audio_Retry);
                line_chart.destroy();
                createChart();
                console.log(""retyaudio :"" + Count_Audio_Retry)
            }


        });
        hintVisibleBtn.addEventListener(""click"", function () {
            Count_Audio_Hint++;
            if (Count_Audio_Pause <= 20) {
                chartHint.push(Count_Audio_Hint);
                line_chart.destroy();
                createChart();
                console.log(""retyaudio :"" + Count_Audio_Hint)
            }


        });
    </script>

    <scri");
                WriteLiteral(@"pt>
        //keyboard shortcuts - các phím tắt
        document.addEventListener(""keydown"", function (event) {
            if (event.code === ""ArrowUp"") {
                // Tăng âm lượng
                if (audio.volume < 1.0) {
                    audio.volume += 0.1;
                }
            } else if (event.code === ""ArrowDown"") {
                // Giảm âm lượng
                if (audio.volume > 0.0) {
                    audio.volume -= 0.1;
                }
            } else if (event.code === ""ArrowLeft"") {
                // Tua ngược 1s
                audio.currentTime -= 1;
            } else if (event.code === ""ArrowRight"") {
                // Tua tới 1s
                audio.currentTime += 1;
            }
            else if (event.code === ""Space"") {
                startStopTimer();
                inputText.disabled = false;
                inputText.focus();
                if (audio.paused) {
                    audio.play(); // Phát tiếp audio nếu đang t");
                WriteLiteral(@"ạm dừng
                    listenBtn.style.display = ""none"";
                    pauseBtn.style.display = ""block"";
                } else {
                    audio.pause(); // Ngưng audio nếu đang phát
                    listenBtn.style.display = ""block"";
                    pauseBtn.style.display = ""none"";

                    //vẽ lại chart
                    Count_Audio_Pause++;
                    chartAudioPause.push(Count_Audio_Pause);
                    line_chart.destroy();
                    createChart();
                }

            }
            else if (event.code === ""KeyM"") {
                audio.muted = !audio.muted;
            }
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LWEnglishPractice.Entities.Track> Html { get; private set; }
    }
}
#pragma warning restore 1591
