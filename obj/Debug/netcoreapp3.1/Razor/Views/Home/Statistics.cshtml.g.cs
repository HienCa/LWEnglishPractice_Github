#pragma checksum "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Statistics.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "510ff7a6ccf5d80de06e499770846a9659075532"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Statistics), @"mvc.1.0.view", @"/Views/Home/Statistics.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\_ViewImports.cshtml"
using LWEnglishPractice;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\_ViewImports.cshtml"
using LWEnglishPractice.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Statistics.cshtml"
using LWEnglishPractice.Entities;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"510ff7a6ccf5d80de06e499770846a9659075532", @"/Views/Home/Statistics.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"98fd7d093ed1d7e82ee64326da0003dab9c85e1c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Statistics : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<LWEnglishPractice.Entities.History>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Style/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Style/ListenAndWrite.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 4 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Statistics.cshtml"
  
    Layout = null;



#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "510ff7a6ccf5d80de06e499770846a96590755324921", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Listen And Write English</title>
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"">
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "510ff7a6ccf5d80de06e499770846a96590755325514", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "510ff7a6ccf5d80de06e499770846a96590755326693", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.2.1/chart.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/chart.js""></script>


");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "510ff7a6ccf5d80de06e499770846a96590755328850", async() => {
                WriteLiteral(@"

    <div class=""row "" style=""width: 100vw; height: 100vh; "">
        <div class=""col-md-2 border border-bottom-0 border-top-0 border-right text-center"" style=""background-image: url('https://leverageedublog.s3.ap-south-1.amazonaws.com/blog/wp-content/uploads/2019/11/23173331/Best-Books-for-GRE.png'); background-position: left; background-repeat: no-repeat; background-size: cover;"">
            <div class="" mt-5"">
                <h3 class=""text-center logoCVG"">CVG ENGLISH</h3>
                <div");
                BeginWriteAttribute("class", " class=\"", 1406, "\"", 1414, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                    <div id=""homeBtn"" class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                        <a href=""/Home/Index"" style=""text-decoration: none;"" class=""text-dark"">
                            <span style=""font-size:32px; margin-right: 10px;"">
                                <i style=""color: #58CC02;""
                                   class=""fa-solid fa-house ""></i>
                            </span> LEARNING
                        </a>
                    </div>
                    <div id=""homeBtn"" class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                        <a href=""/Home/Statistics"" style=""text-decoration: none;"" class=""text-dark"">
                            <span style=""font-size:32px; margin-right: 10px;"">
                                <i style=""color: #58CC02;""
                                   class=""fa-solid fa-house ""></i>
                            </span> STATISTICS
                        </a>
        ");
                WriteLiteral(@"            </div>
                    <di id=""rankingBtn"" class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                        <a href=""/Home/Ranking"" style=""text-decoration: none;"" class=""text-dark"">
                            <span style=""font-size:32px; margin-right: 10px;"">
                                <i style=""color: #58CC02;""
                                   class=""fa-solid fa-ranking-star ""></i>
                            </span> RANKING

                        </a>
                </div>
                <div id=""profileBtn"" class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                    <a href=""/Home/Profile"" style=""text-decoration: none;"" class=""text-dark"">
                        <span style=""font-size:32px; margin-right: 20px;"">
                            <i style=""color: #58CC02;""
                               class=""fa-solid fa-user ""></i>
                        </span> PROIFILE
                    </a>
              ");
                WriteLiteral(@"  </div>
                <div class=""d-flex align-items-center rounded-3 sidebar p-4 pt-0 pb-0"">

                    <a href=""/Login/Logout"" style=""text-decoration: none;"" class=""text-dark"">
                        <span style=""font-size:32px; margin-right: 20px;"">

                            <i style=""color: red;"" class=""fa-solid fa-power-off""></i>
                        </span> LOG OUT
                    </a>
                </div>
            </div>
        </div>
        <div class=""col-md-10 pb-5 border border-bottom-0 border-left-0 border-top-0 border-right""
             style=""max-height: 100vh; overflow-y:scroll"">


            <div id=""learning"" class=""fade"">

");
#nullable restore
#line 91 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Statistics.cshtml"
                 if (Model.Count() > 0)
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <div class=\"mt-2\">\r\n                        <h1 class=\"text-center\">HISTORY</h1>\r\n                    </div>\r\n");
                WriteLiteral("                    <div class=\"mt-2\">\r\n");
                WriteLiteral("                        <canvas id=\"linechartDay\" class=\"w-100\" style=\"max-height: 50vh;\"></canvas>\r\n                    </div>\r\n");
                WriteLiteral("                    <div class=\"mt-5\">\r\n");
                WriteLiteral("                        <canvas id=\"linechart\" class=\"w-100\" style=\"max-height: 50vh;\"></canvas>\r\n                    </div>\r\n");
                WriteLiteral("                    <div class=\"mt-5\">\r\n");
                WriteLiteral("                        <canvas id=\"linechartYear\" class=\"w-100\" style=\"max-height: 50vh;\"></canvas>\r\n                    </div>\r\n");
#nullable restore
#line 112 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Statistics.cshtml"

                }
                else
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <div class=\"mt-2\">\r\n                        <h1 class=\"text-center\">NO HISTORY</h1>\r\n                    </div>\r\n");
#nullable restore
#line 119 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Statistics.cshtml"
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\r\n\r\n    <script>\r\n        let myArr =");
#nullable restore
#line 132 "D:\ĐH-08CNTT1\HienCa\LWEnglishPractice\Views\Home\Statistics.cshtml"
              Write(Html.Raw(ViewBag.dataStatistics));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
        let data = myArr;


        /*  theo tháng năm*/

        let scoresByMonth = new Map();

        // Loop through the data and update the scores for each month
        for (let item of data) {
            let date = new Date(item.Finishdate);
            let monthYear = date.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });
            let score = item.Score;

            if (scoresByMonth.has(monthYear)) {
                scoresByMonth.set(monthYear, scoresByMonth.get(monthYear) + score);
            } else {
                scoresByMonth.set(monthYear, score);
            }
        }

        // Convert the Map to an array of key-value pairs
        let chartData = Array.from(scoresByMonth, ([label, value]) => ({ label, value }));

        // Display the chart data
        console.log(chartData);
        let labels = chartData.map(data => {
            let dateObj = new Date(data.Finishdate);
            if (isNaN(dateObj.getTime())) {
                //");
                WriteLiteral(@" handle invalid date input
                return null;
            }
            return dateObj.toLocaleDateString('en-GB', { month: 'long' });
        });
        labels.sort(function (a, b) {
            let monthA = new Date(Date.parse('01 ' + a)).getMonth();
            let monthB = new Date(Date.parse('01 ' + b)).getMonth();
            return monthA - monthB;
        });
        let labelValues = chartData.map(data => data.label);
        let values = chartData.map(data => data.value);
        const ctx = document.getElementById('linechart');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labelValues,
                datasets: [{
                    label: 'Statistics by month',
                    data: values,
                    borderWidth: 1,
                    backgroundColor: '#198754',
                    barThickness: 120


                }]
            },
            options: {
                scales: {
          ");
                WriteLiteral(@"          y: {
                        beginAtZero: true
                    }
                }
            }
        });



       /*  theo ngày*/
        let yy = myArr.map(obj => obj[Object.keys(obj)[1]]);
        let xx = myArr.map(obj => obj[Object.keys(obj)[3]]);


        for (let i = 0; i < xx.length; i++) {
            xx[i] = xx[i].split('T')[0];
            let parts = xx[i].split('-');
            xx[i] = parts[2] + '-' + parts[1] + '-' + parts[0];
        }

        console.log(xx);
        const dates = xx;
        const formattedDates = dates.map(date => {
            const dateObj = new Date(date);
            if (isNaN(dateObj.getTime())) {
                // handle invalid date input
                return null;
            }
            return dateObj.toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' });
        });

        const linechartDay = document.getElementById('linechartDay');

        new Chart(linechartDay, {
      ");
                WriteLiteral(@"      type: 'bar',
            data: {
                labels: xx,
                datasets: [{
                    label: 'Statistics by day',
                    data: yy,
                    borderWidth: 1,
                    backgroundColor: '#20c997',
                    barThickness: 120


                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });




        //theo năm
        let scoresByYear = new Map();

        // Loop through the data and update the scores for each year
        for (let item of data) {
            let date = new Date(item.Finishdate);
            let year = date.getFullYear();
            let score = item.Score;

            if (scoresByYear.has(year)) {
                scoresByYear.set(year, scoresByYear.get(year) + score);
            } else {
                scoresByYear.set(year, score");
                WriteLiteral(@");
            }
        }

        // Convert the Map to an array of key-value pairs
        let chartDataYear = Array.from(scoresByYear, ([label, value]) => ({ label: label.toString(), value }));
        // Tách label và value ra 2 mảng riêng
        let labelsYear = chartDataYear.map(item => item.label);
        let valuesYear = chartDataYear.map(item => item.value);

        // Hiển thị các mảng
        console.log(labelsYear);
        console.log(valuesYear);

        const linechartYear = document.getElementById('linechartYear');

        new Chart(linechartYear, {
            type: 'bar',
            data: {
                labels: labelsYear,
                datasets: [{
                    label: 'Statistics by year',
                    data: valuesYear,
                    borderWidth: 1,
                    backgroundColor: '#022a18',
                    barThickness: 120
                }
                ]
            },
            options: {
                scales:");
                WriteLiteral(@" {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });


    </script>


    <script>
        window.addEventListener('beforeunload', function () {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = cookies[i].trim();
                if (cookie.indexOf('HienCaCookie=') === 0) {
                    document.cookie = ""hienca=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;"";
                    break;
                }
            }
        });

    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<LWEnglishPractice.Entities.History>> Html { get; private set; }
    }
}
#pragma warning restore 1591
